{"version":3,"sources":["TagsTable.js","DwvComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["TagsTable","props","handleChangePage","event","page","setState","handleChangeRowsPerPage","rowsPerPage","target","value","state","data","displayData","searchfor","filterList","bind","nextProps","this","search","searchLo","toLowerCase","updatedList","filter","item","key","hasOwnProperty","toString","indexOf","classes","className","container","id","type","searchField","onChange","margin","InputProps","startAdornment","position","table","slice","map","row","group","element","name","component","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","React","Component","withStyles","theme","flex","spacer","backgroundColor","palette","background","default","marginLeft","dwv","gui","getElement","base","image","decoderScripts","TransitionUp","direction","DwvComponent","onChangeTool","tool","dwvApp","selectedTool","setTool","onChangeShape","tools","Draw","options","shape","setDrawShape","onReset","resetDisplay","handleTagsDialogOpen","showDicomTags","handleTagsDialogClose","handleMenuButtonClick","toolMenuAnchorEl","currentTarget","handleMenuClose","handleMenuItemClick","setupDropbox","app","layerContainer","addEventListener","onDragOver","onDragLeave","onDrop","box","dropboxClassName","dropBoxSize","getLayerContainerSize","height","setAttribute","stopPropagation","preventDefault","borderClassName","hoverClassName","replace","hideDropbox","parentNode","removeChild","loadFiles","dataTransfer","files","versions","getVersion","react","version","Scroll","ZoomAndPan","WindowLevel","events","loadProgress","dataLoaded","metaData","toolsMenuItems","Object","keys","onClick","variant","color","aria-owns","aria-haspopup","disabled","button","size","iconSmall","anchorEl","open","Boolean","onClose","TransitionComponent","paper","tagsDialog","appBar","aria-label","href","title","App","init","nReceivedError","nReceivedAbort","loaded","utils","objectToArray","getMetaData","isMonoSliceData","getImage","getNumberOfFrames","alert","console","error","defaultOnKeydown","window","onResize","loadFromUri","location","spacing","unit","minHeight","maxHeight","minWidth","maxWidth","fontSize","createMuiTheme","typography","useNextVariants","primary","indigo","secondary","pink","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","render","document","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.c84bac01.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport Search from '@material-ui/icons/Search';\r\n\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nconst styles = theme => ({\r\n  flex: {\r\n    flex: 1,\r\n  },\r\n  spacer: {\r\n    flex: '1 1 100%',\r\n  },\r\n  row: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.background.default,\r\n    },\r\n  },\r\n  searchField: {\r\n    backgroundColor: 'white',\r\n    marginLeft: 20\r\n  }\r\n});\r\n\r\nclass TagsTable extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.data,\r\n      displayData: this.props.data,\r\n      searchfor: \"\",\r\n      page: 0,\r\n      rowsPerPage: 10\r\n    };\r\n\r\n    // bind listener\r\n    this.filterList = this.filterList.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    this.setState({\r\n      data: nextProps.data,\r\n      displayData: nextProps.data\r\n    });\r\n  }\r\n\r\n  filterList(event) {\r\n    var search = event.target.value\r\n    var searchLo = search.toLowerCase();\r\n    var updatedList = this.state.data.filter( function (item) {\r\n      for ( var key in item ) {\r\n        if( item.hasOwnProperty(key) ) {\r\n          var value = item[key];\r\n          if ( typeof value !== \"string\" ) {\r\n            value = value.toString();\r\n          }\r\n          if ( value.toLowerCase().indexOf(searchLo) !== -1 ) {\r\n            return true;\r\n          }\r\n        }\r\n      }\r\n      return false;\r\n    });\r\n    this.setState({searchfor: search, displayData: updatedList});\r\n  }\r\n\r\n  handleChangePage = (event, page) => {\r\n    this.setState({ page });\r\n  }\r\n\r\n  handleChangeRowsPerPage = event => {\r\n    this.setState({ rowsPerPage: event.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { displayData, searchfor, rowsPerPage, page } = this.state;\r\n\r\n    return (\r\n      <div className={classes.container}>\r\n        <TextField\r\n          id=\"search\"\r\n          type=\"search\"\r\n          value={searchfor}\r\n          className={classes.searchField}\r\n          onChange={this.filterList}\r\n          margin=\"normal\"\r\n          InputProps={{\r\n            startAdornment: (\r\n              <InputAdornment position=\"start\">\r\n                <Search />\r\n              </InputAdornment>\r\n            )\r\n          }}\r\n        />\r\n\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Tag</TableCell>\r\n              <TableCell>Value</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n          {displayData.slice(page * rowsPerPage,\r\n                page * rowsPerPage + rowsPerPage).map( item => {\r\n            return (\r\n              <TableRow className={classes.row} key={item.group+item.element}>\r\n                <TableCell>{item.name}</TableCell>\r\n                <TableCell>{item.value.toString()}</TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n          </TableBody>\r\n        </Table>\r\n\r\n        <TablePagination\r\n          component=\"div\"\r\n          count={displayData.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          backIconButtonProps={{\r\n            'aria-label': 'Previous Page',\r\n          }}\r\n          nextIconButtonProps={{\r\n            'aria-label': 'Next Page',\r\n          }}\r\n          onChangePage={this.handleChangePage}\r\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\r\n        />\r\n\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nTagsTable.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(TagsTable);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport Link from '@material-ui/core/Link';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Slide from '@material-ui/core/Slide';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\n\r\nimport TagsTable from './TagsTable';\r\n\r\nimport './DwvComponent.css';\r\nimport dwv from 'dwv';\r\n\r\n// gui overrides\r\n\r\n// get element\r\ndwv.gui.getElement = dwv.gui.base.getElement;\r\n\r\n// Image decoders (for web workers)\r\ndwv.image.decoderScripts = {\r\n    \"jpeg2000\": \"assets/dwv/decoders/pdfjs/decode-jpeg2000.js\",\r\n    \"jpeg-lossless\": \"assets/dwv/decoders/rii-mango/decode-jpegloss.js\",\r\n    \"jpeg-baseline\": \"assets/dwv/decoders/pdfjs/decode-jpegbaseline.js\",\r\n    \"rle\": \"assets/dwv/decoders/dwv/decode-rle.js\"\r\n};\r\n\r\nconst styles = theme => ({\r\n  button: {\r\n    margin: theme.spacing.unit,\r\n  },\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    flex: '0 0 auto',\r\n  },\r\n  tagsDialog: {\r\n    minHeight: '90vh', maxHeight: '90vh',\r\n    minWidth: '90vw', maxWidth: '90vw',\r\n  },\r\n  iconSmall: {\r\n    fontSize: 20,\r\n  }\r\n});\r\n\r\nfunction TransitionUp(props) {\r\n  return <Slide direction=\"up\" {...props} />;\r\n}\r\n\r\nclass DwvComponent extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      versions: {\r\n        dwv: dwv.getVersion(),\r\n        react: React.version\r\n      },\r\n      tools: {\r\n        Scroll: {},\r\n        ZoomAndPan: {},\r\n        WindowLevel: {},\r\n        Draw: {\r\n          options: ['Ruler'],\r\n          type: 'factory',\r\n          events: ['draw-create', 'draw-change', 'draw-move', 'draw-delete']\r\n        }\r\n      },\r\n      selectedTool: 'Select Tool',\r\n      loadProgress: 0,\r\n      dataLoaded: false,\r\n      dwvApp: null,\r\n      metaData: [],\r\n      showDicomTags: false,\r\n      toolMenuAnchorEl: null,\r\n      dropboxClassName: 'dropBox',\r\n      borderClassName: 'dropBoxBorder',\r\n      hoverClassName: 'hover'\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    const { versions, tools, loadProgress, dataLoaded, metaData, toolMenuAnchorEl } = this.state;\r\n\r\n    const toolsMenuItems = Object.keys(tools).map( (tool) =>\r\n      <MenuItem onClick={this.handleMenuItemClick.bind(this, tool)} key={tool} value={tool}>{tool}</MenuItem>\r\n    );\r\n\r\n    return (\r\n      <div id=\"dwv\">\r\n        <LinearProgress variant=\"determinate\" value={loadProgress} />\r\n        <div className=\"button-row\">\r\n          <Button variant=\"contained\" color=\"primary\"\r\n            aria-owns={toolMenuAnchorEl ? 'simple-menu' : null}\r\n            aria-haspopup=\"true\"\r\n            onClick={this.handleMenuButtonClick}\r\n            disabled={!dataLoaded}\r\n            className={classes.button}\r\n            size=\"medium\"\r\n          >{ this.state.selectedTool }\r\n          <ArrowDropDownIcon className={classes.iconSmall}/></Button>\r\n          <Menu\r\n            id=\"simple-menu\"\r\n            anchorEl={toolMenuAnchorEl}\r\n            open={Boolean(toolMenuAnchorEl)}\r\n            onClose={this.handleMenuClose}\r\n          >\r\n            {toolsMenuItems}\r\n          </Menu>\r\n\r\n          <Button variant=\"contained\" color=\"primary\"\r\n            disabled={!dataLoaded}\r\n            onClick={this.onReset}\r\n          >Reset</Button>\r\n\r\n          <Button variant=\"contained\" color=\"primary\"\r\n            onClick={this.handleTagsDialogOpen}\r\n            disabled={!dataLoaded}\r\n            className={classes.button}\r\n            size=\"medium\">Tags</Button>\r\n          <Dialog\r\n            open={this.state.showDicomTags}\r\n            onClose={this.handleTagsDialogClose}\r\n            TransitionComponent={TransitionUp}\r\n            classes={{ paper: classes.tagsDialog }}\r\n            >\r\n              <AppBar className={classes.appBar}>\r\n                <Toolbar>\r\n                  <IconButton color=\"inherit\" onClick={this.handleTagsDialogClose} aria-label=\"Close\">\r\n                    <CloseIcon />\r\n                  </IconButton>\r\n                  <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\r\n                    DICOM Tags\r\n                  </Typography>\r\n                </Toolbar>\r\n              </AppBar>\r\n              <TagsTable data={metaData} />\r\n          </Dialog>\r\n        </div>\r\n\r\n        <div className=\"layerContainer\">\r\n          <div className=\"dropBox dropBoxBorder\">\r\n            <Typography>Drag and drop data here.</Typography>\r\n          </div>\r\n          <canvas className=\"imageLayer\">Only for HTML5 compatible browsers...</canvas>\r\n          <div className=\"drawDiv\"></div>\r\n        </div>\r\n\r\n        <div><p className=\"legend\">\r\n          <Typography variant=\"caption\">Powered by <Link\r\n              href=\"https://github.com/ivmartel/dwv\"\r\n              title=\"dwv on github\">dwv\r\n            </Link> {versions.dwv} and React {versions.react}\r\n          </Typography>\r\n        </p></div>\r\n\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    // create app\r\n    var app = new dwv.App();\r\n    // initialise app\r\n    app.init({\r\n      \"containerDivId\": \"dwv\",\r\n      \"tools\": this.state.tools\r\n    });\r\n\r\n    // load events\r\n    let nReceivedError = null;\r\n    let nReceivedAbort = null;\r\n    app.addEventListener('load-start', (/*event*/) => {\r\n      nReceivedError = 0;\r\n      nReceivedAbort = 0;\r\n    });\r\n    app.addEventListener(\"load-progress\", (event) => {\r\n      this.setState({loadProgress: event.loaded});\r\n    });\r\n    app.addEventListener(\"load\", (/*event*/) => {\r\n      // set dicom tags\r\n      this.setState({metaData: dwv.utils.objectToArray(app.getMetaData())});\r\n      // set the selected tool\r\n      let selectedTool = 'Scroll'\r\n      if (app.isMonoSliceData() && app.getImage().getNumberOfFrames() === 1) {\r\n        selectedTool = 'ZoomAndPan';\r\n      }\r\n      this.onChangeTool(selectedTool);\r\n      // hide dropBox\r\n      this.hideDropbox();\r\n      // set data loaded flag\r\n      this.setState({dataLoaded: true});\r\n    });\r\n    app.addEventListener('load-end', (/*event*/) => {\r\n      if (nReceivedError) {\r\n        this.setState({loadProgress: 0});\r\n        alert('Received errors during load. Check log for details.');\r\n      }\r\n      if (nReceivedAbort) {\r\n        this.setState({loadProgress: 0});\r\n        alert('Load was aborted.');\r\n      }\r\n    });\r\n    app.addEventListener('error', (event) => {\r\n      console.error(event.error);\r\n      ++nReceivedError;\r\n    });\r\n    app.addEventListener('abort', (/*event*/) => {\r\n      ++nReceivedAbort;\r\n    });\r\n\r\n    // handle key events\r\n    app.addEventListener('keydown', (event) => {\r\n        app.defaultOnKeydown(event);\r\n    });\r\n    // handle window resize\r\n    window.addEventListener('resize', app.onResize);\r\n\r\n    // store\r\n    this.setState({dwvApp: app});\r\n\r\n    // setup drop box\r\n    this.setupDropbox(app);\r\n\r\n    // possible load from location\r\n    dwv.utils.loadFromUri(window.location.href, app);\r\n  }\r\n\r\n  /**\r\n   * Handle a change tool event.\r\n   * @param tool The new tool name.\r\n   */\r\n  onChangeTool = (tool: string) => {\r\n    if (this.state.dwvApp) {\r\n      this.setState({selectedTool: tool});\r\n      this.state.dwvApp.setTool(tool);\r\n      if (tool === 'Draw') {\r\n        this.onChangeShape(this.state.tools.Draw.options[0]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a change draw shape event.\r\n   * @param shape The new shape name.\r\n   */\r\n  onChangeShape = (shape: string) => {\r\n    if (this.state.dwvApp) {\r\n      this.state.dwvApp.setDrawShape(shape);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a reset event.\r\n   */\r\n  onReset = tool => {\r\n    if (this.state.dwvApp) {\r\n      this.state.dwvApp.resetDisplay();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open the DICOM tags dialog.\r\n   */\r\n  handleTagsDialogOpen = () => {\r\n    this.setState({ showDicomTags: true });\r\n  }\r\n\r\n  /**\r\n   * Close the DICOM tags dialog.\r\n   */\r\n  handleTagsDialogClose = () => {\r\n    this.setState({ showDicomTags: false });\r\n  };\r\n\r\n  /**\r\n   * Menu button click.\r\n   */\r\n  handleMenuButtonClick = event => {\r\n    this.setState({ toolMenuAnchorEl: event.currentTarget });\r\n  };\r\n\r\n  /**\r\n   * Menu cloase.\r\n   */\r\n  handleMenuClose = event => {\r\n    this.setState({ toolMenuAnchorEl: null });\r\n  };\r\n\r\n  /**\r\n   * Menu item click.\r\n   */\r\n  handleMenuItemClick = tool => {\r\n    this.setState({ toolMenuAnchorEl: null });\r\n    this.onChangeTool(tool);\r\n  };\r\n\r\n  // drag and drop [begin] -----------------------------------------------------\r\n\r\n  /**\r\n   * Setup the data load drop box: add event listeners and set initial size.\r\n   */\r\n  setupDropbox = (app) => {\r\n      // start listening to drag events on the layer container\r\n      const layerContainer = app.getElement('layerContainer');\r\n      if (layerContainer) {\r\n        layerContainer.addEventListener('dragover', this.onDragOver);\r\n        layerContainer.addEventListener('dragleave', this.onDragLeave);\r\n        layerContainer.addEventListener('drop', this.onDrop);\r\n      }\r\n      // set the initial drop box size\r\n      const box = app.getElement(this.state.dropboxClassName);\r\n      if (box) {\r\n        const size = app.getLayerContainerSize();\r\n        const dropBoxSize = 2 * size.height / 3;\r\n        box.setAttribute(\r\n          'style',\r\n          'width:' + dropBoxSize + 'px;height:' + dropBoxSize + 'px');\r\n      }\r\n  }\r\n\r\n  /**\r\n   * Handle a drag over.\r\n   * @param event The event to handle.\r\n   */\r\n  onDragOver = (event: DragEvent) => {\r\n    // prevent default handling\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    // update box border\r\n    const box = this.state.dwvApp.getElement(this.state.borderClassName);\r\n    if (box && box.className.indexOf(this.state.hoverClassName) === -1) {\r\n        box.className += ' ' + this.state.hoverClassName;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a drag leave.\r\n   * @param event The event to handle.\r\n   */\r\n  onDragLeave = (event: DragEvent) => {\r\n    // prevent default handling\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    // update box class\r\n    const box = this.state.dwvApp.getElement(this.borderClassName + ' hover');\r\n    if (box && box.className.indexOf(this.state.hoverClassName) !== -1) {\r\n        box.className = box.className.replace(' ' + this.state.hoverClassName, '');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide the data load drop box.\r\n   */\r\n  hideDropbox = () => {\r\n    // remove box\r\n    const box = this.state.dwvApp.getElement(this.state.dropboxClassName);\r\n    if (box) {\r\n      box.parentNode.removeChild(box);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle a drop event.\r\n   * @param event The event to handle.\r\n   */\r\n  onDrop = (event: DragEvent) => {\r\n    // prevent default handling\r\n    event.stopPropagation();\r\n    event.preventDefault();\r\n    // load files\r\n    this.state.dwvApp.loadFiles(event.dataTransfer.files);\r\n    // hide drop box\r\n    this.hideDropbox();\r\n  }\r\n\r\n  // drag and drop [end] -------------------------------------------------------\r\n\r\n} // DwvComponent\r\n\r\nDwvComponent.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(DwvComponent);\r\n","import React, { Component } from 'react';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport pink from '@material-ui/core/colors/pink';\r\n\r\nimport './App.css';\r\nimport DwvComponent from './DwvComponent';\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    useNextVariants: true,\r\n  },\r\n  palette: {\r\n    primary: indigo,\r\n    secondary: pink,\r\n    type: 'light'\r\n  }\r\n});\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <div className=\"App\">\r\n          <DwvComponent />\r\n        </div>\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}