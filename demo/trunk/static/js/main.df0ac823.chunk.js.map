{"version":3,"sources":["TagsTable.js","DwvComponent.js","App.js","registerServiceWorker.js","index.js"],"names":["TagsTable","React","Component","constructor","props","super","handleChangePage","event","page","this","setState","handleChangeRowsPerPage","rowsPerPage","target","value","state","data","displayData","searchfor","filterList","bind","search","searchLo","toLowerCase","updatedList","filter","item","key","hasOwnProperty","toString","indexOf","render","classes","className","container","TextField","id","type","searchField","onChange","margin","InputProps","startAdornment","InputAdornment","position","Table","table","TableHead","TableRow","TableCell","TableBody","slice","map","row","name","group","element","TablePagination","component","count","length","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","withStyles","theme","flex","spacer","backgroundColor","palette","background","default","marginLeft","dwv","gui","getElement","base","image","decoderScripts","TransitionUp","forwardRef","ref","Slide","direction","DwvComponent","onChangeTool","tool","dwvApp","selectedTool","setTool","onChangeShape","tools","Draw","options","shape","setDrawShape","onReset","resetDisplay","handleTagsDialogOpen","showDicomTags","handleTagsDialogClose","handleMenuButtonClick","toolMenuAnchorEl","currentTarget","handleMenuClose","handleMenuItemClick","setupDropbox","app","layerContainer","showDropbox","addEventListener","onDragOver","onDragLeave","onDrop","stopPropagation","preventDefault","box","borderClassName","hoverClassName","replace","show","dropboxClassName","innerHTML","dropBoxSize","getLayerContainerSize","height","setAttribute","loadFiles","dataTransfer","files","versions","getVersion","react","version","Scroll","ZoomAndPan","WindowLevel","events","toolNames","loadProgress","dataLoaded","metaData","toolsMenuItems","MenuItem","onClick","LinearProgress","variant","Button","color","aria-owns","aria-haspopup","disabled","button","size","iconSmall","Menu","anchorEl","open","Boolean","onClose","Dialog","TransitionComponent","paper","tagsDialog","AppBar","appBar","Toolbar","IconButton","aria-label","Typography","Link","href","title","componentDidMount","App","init","nLoadItem","nReceivedError","nReceivedAbort","loaded","utils","objectToArray","getMetaData","names","canScroll","canWindowLevel","push","isMonoSliceData","getImage","getNumberOfFrames","alert","console","error","defaultOnKeydown","window","onResize","loadFromUri","location","spacing","minHeight","maxHeight","minWidth","maxWidth","fontSize","createMuiTheme","typography","useNextVariants","primary","indigo","secondary","pink","CssBaseline","isLocalhost","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","catch","ReactDOM","document","getElementById","URL","process","origin","fetch","response","status","headers","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.df0ac823.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport TextField from '@material-ui/core/TextField';\n\nimport Search from '@material-ui/icons/Search';\n\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TablePagination from '@material-ui/core/TablePagination';\n\nconst styles = theme => ({\n  flex: {\n    flex: 1,\n  },\n  spacer: {\n    flex: '1 1 100%',\n  },\n  row: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n  searchField: {\n    backgroundColor: 'white',\n    marginLeft: 20\n  }\n});\n\nclass TagsTable extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: this.props.data,\n      displayData: this.props.data,\n      searchfor: \"\",\n      page: 0,\n      rowsPerPage: 10\n    };\n\n    // bind listener\n    this.filterList = this.filterList.bind(this);\n  }\n\n  filterList(event) {\n    var search = event.target.value\n    var searchLo = search.toLowerCase();\n    var updatedList = this.state.data.filter( function (item) {\n      for ( var key in item ) {\n        if( item.hasOwnProperty(key) ) {\n          var value = item[key];\n          if ( typeof value !== \"string\" ) {\n            value = value.toString();\n          }\n          if ( value.toLowerCase().indexOf(searchLo) !== -1 ) {\n            return true;\n          }\n        }\n      }\n      return false;\n    });\n    this.setState({searchfor: search, displayData: updatedList});\n  }\n\n  handleChangePage = (event, page) => {\n    this.setState({ page });\n  }\n\n  handleChangeRowsPerPage = event => {\n    this.setState({ page: 0, rowsPerPage: event.target.value });\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { displayData, searchfor, rowsPerPage, page } = this.state;\n\n    return (\n      <div className={classes.container}>\n        <TextField\n          id=\"search\"\n          type=\"search\"\n          value={searchfor}\n          className={classes.searchField}\n          onChange={this.filterList}\n          margin=\"normal\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <Search />\n              </InputAdornment>\n            )\n          }}\n        />\n\n        <Table className={classes.table}>\n          <TableHead>\n            <TableRow>\n              <TableCell>Tag</TableCell>\n              <TableCell>Value</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n          {displayData.slice(page * rowsPerPage,\n                page * rowsPerPage + rowsPerPage).map( item => {\n            return (\n              <TableRow className={classes.row} key={item.group+item.element}>\n                <TableCell>{item.name}</TableCell>\n                <TableCell>{item.value.toString()}</TableCell>\n              </TableRow>\n            );\n          })}\n          </TableBody>\n        </Table>\n\n        <TablePagination\n          component=\"div\"\n          count={displayData.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          backIconButtonProps={{\n            'aria-label': 'Previous Page',\n          }}\n          nextIconButtonProps={{\n            'aria-label': 'Next Page',\n          }}\n          onChangePage={this.handleChangePage}\n          onChangeRowsPerPage={this.handleChangeRowsPerPage}\n        />\n\n      </div>\n    );\n  }\n}\n\nTagsTable.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(TagsTable);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Menu from '@material-ui/core/Menu';\nimport MenuItem from '@material-ui/core/MenuItem';\n\nimport Link from '@material-ui/core/Link';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\n\nimport Dialog from '@material-ui/core/Dialog';\nimport AppBar from '@material-ui/core/AppBar';\nimport Slide from '@material-ui/core/Slide';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport TagsTable from './TagsTable';\n\nimport './DwvComponent.css';\nimport dwv from 'dwv';\n\n// gui overrides\n\n// get element\ndwv.gui.getElement = dwv.gui.base.getElement;\n\n// Image decoders (for web workers)\ndwv.image.decoderScripts = {\n    \"jpeg2000\": \"assets/dwv/decoders/pdfjs/decode-jpeg2000.js\",\n    \"jpeg-lossless\": \"assets/dwv/decoders/rii-mango/decode-jpegloss.js\",\n    \"jpeg-baseline\": \"assets/dwv/decoders/pdfjs/decode-jpegbaseline.js\",\n    \"rle\": \"assets/dwv/decoders/dwv/decode-rle.js\"\n};\n\nconst styles = theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n  appBar: {\n    position: 'relative',\n  },\n  title: {\n    flex: '0 0 auto',\n  },\n  tagsDialog: {\n    minHeight: '90vh', maxHeight: '90vh',\n    minWidth: '90vw', maxWidth: '90vw',\n  },\n  iconSmall: {\n    fontSize: 20,\n  }\n});\n\nexport const TransitionUp = React.forwardRef((props, ref) => (\n  <Slide direction=\"up\" {...props} ref={ref} />\n))\n\nclass DwvComponent extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      versions: {\n        dwv: dwv.getVersion(),\n        react: React.version\n      },\n      tools: {\n        Scroll: {},\n        ZoomAndPan: {},\n        WindowLevel: {},\n        Draw: {\n          options: ['Ruler'],\n          type: 'factory',\n          events: ['drawcreate', 'drawchange', 'drawmove', 'drawdelete']\n        }\n      },\n      toolNames: [],\n      selectedTool: 'Select Tool',\n      loadProgress: 0,\n      dataLoaded: false,\n      dwvApp: null,\n      metaData: [],\n      showDicomTags: false,\n      toolMenuAnchorEl: null,\n      dropboxClassName: 'dropBox',\n      borderClassName: 'dropBoxBorder',\n      hoverClassName: 'hover'\n    };\n  }\n\n  render() {\n    const { classes } = this.props;\n    const { versions, tools, toolNames, loadProgress, dataLoaded, metaData, toolMenuAnchorEl } = this.state;\n\n    const toolsMenuItems = toolNames.map( (tool) =>\n      <MenuItem onClick={this.handleMenuItemClick.bind(this, tool)} key={tool} value={tool}>{tool}</MenuItem>\n    );\n\n    return (\n      <div id=\"dwv\">\n        <LinearProgress variant=\"determinate\" value={loadProgress} />\n        <div className=\"button-row\">\n          <Button variant=\"contained\" color=\"primary\"\n            aria-owns={toolMenuAnchorEl ? 'simple-menu' : null}\n            aria-haspopup=\"true\"\n            onClick={this.handleMenuButtonClick}\n            disabled={!dataLoaded}\n            className={classes.button}\n            size=\"medium\"\n          >{ this.state.selectedTool }\n          <ArrowDropDownIcon className={classes.iconSmall}/></Button>\n          <Menu\n            id=\"simple-menu\"\n            anchorEl={toolMenuAnchorEl}\n            open={Boolean(toolMenuAnchorEl)}\n            onClose={this.handleMenuClose}\n          >\n            {toolsMenuItems}\n          </Menu>\n\n          <Button variant=\"contained\" color=\"primary\"\n            disabled={!dataLoaded}\n            onClick={this.onReset}\n          >Reset</Button>\n\n          <Button variant=\"contained\" color=\"primary\"\n            onClick={this.handleTagsDialogOpen}\n            disabled={!dataLoaded}\n            className={classes.button}\n            size=\"medium\">Tags</Button>\n          <Dialog\n            open={this.state.showDicomTags}\n            onClose={this.handleTagsDialogClose}\n            TransitionComponent={TransitionUp}\n            classes={{ paper: classes.tagsDialog }}\n            >\n              <AppBar className={classes.appBar}>\n                <Toolbar>\n                  <IconButton color=\"inherit\" onClick={this.handleTagsDialogClose} aria-label=\"Close\">\n                    <CloseIcon />\n                  </IconButton>\n                  <Typography variant=\"h6\" color=\"inherit\" className={classes.flex}>\n                    DICOM Tags\n                  </Typography>\n                </Toolbar>\n              </AppBar>\n              <TagsTable data={metaData} />\n          </Dialog>\n        </div>\n\n        <div className=\"layerContainer\">\n          <div className=\"dropBox\"></div>\n          <canvas className=\"imageLayer\">Only for HTML5 compatible browsers...</canvas>\n          <div className=\"drawDiv\"></div>\n        </div>\n\n        <div><p className=\"legend\">\n          <Typography variant=\"caption\">Powered by <Link\n              href=\"https://github.com/ivmartel/dwv\"\n              title=\"dwv on github\">dwv\n            </Link> {versions.dwv} and <Link\n              href=\"https://github.com/facebook/react\"\n              title=\"react on github\">React\n            </Link> {versions.react}\n          </Typography>\n        </p></div>\n\n      </div>\n    );\n  }\n\n  componentDidMount() {\n    // create app\n    var app = new dwv.App();\n    // initialise app\n    app.init({\n      \"containerDivId\": \"dwv\",\n      \"tools\": this.state.tools\n    });\n\n    // load events\n    let nLoadItem = null;\n    let nReceivedError = null;\n    let nReceivedAbort = null;\n    app.addEventListener('loadstart', (/*event*/) => {\n      // reset flags\n      nLoadItem = 0;\n      nReceivedError = 0;\n      nReceivedAbort = 0;\n      // hide drop box\n      this.showDropbox(app, false);\n    });\n    app.addEventListener(\"loadprogress\", (event) => {\n      this.setState({loadProgress: event.loaded});\n    });\n    app.addEventListener(\"load\", (/*event*/) => {\n      // set dicom tags\n      this.setState({metaData: dwv.utils.objectToArray(app.getMetaData())});\n      // available tools\n      let names = [];\n      for (const key in this.state.tools) {\n        if ((key === 'Scroll' && app.canScroll()) ||\n          (key === 'WindowLevel' && app.canWindowLevel()) ||\n          (key !== 'Scroll' && key !== 'WindowLevel')) {\n          names.push(key);\n        }\n      }\n      this.setState({toolNames: names});\n      this.onChangeTool(names[0]);\n      // set the selected tool\n      let selectedTool = 'Scroll'\n      if (app.isMonoSliceData() && app.getImage().getNumberOfFrames() === 1) {\n        selectedTool = 'ZoomAndPan';\n      }\n      this.onChangeTool(selectedTool);\n      // set data loaded flag\n      this.setState({dataLoaded: true});\n    });\n    app.addEventListener('loadend', (/*event*/) => {\n      if (nReceivedError) {\n        this.setState({loadProgress: 0});\n        alert('Received errors during load. Check log for details.');\n        // show drop box if nothing has been loaded\n        if (!nLoadItem) {\n          this.showDropbox(app, true);\n        }\n      }\n      if (nReceivedAbort) {\n        this.setState({loadProgress: 0});\n        alert('Load was aborted.');\n        this.showDropbox(app, true);\n      }\n    });\n    app.addEventListener('loaditem', (/*event*/) => {\n      ++nLoadItem;\n    });\n    app.addEventListener('error', (event) => {\n      console.error(event.error);\n      ++nReceivedError;\n    });\n    app.addEventListener('abort', (/*event*/) => {\n      ++nReceivedAbort;\n    });\n\n    // handle key events\n    app.addEventListener('keydown', (event) => {\n      app.defaultOnKeydown(event);\n    });\n    // handle window resize\n    window.addEventListener('resize', app.onResize);\n\n    // store\n    this.setState({dwvApp: app});\n\n    // setup drop box\n    this.setupDropbox(app);\n\n    // possible load from location\n    dwv.utils.loadFromUri(window.location.href, app);\n  }\n\n  /**\n   * Handle a change tool event.\n   * @param tool The new tool name.\n   */\n  onChangeTool = (tool: string) => {\n    if (this.state.dwvApp) {\n      this.setState({selectedTool: tool});\n      this.state.dwvApp.setTool(tool);\n      if (tool === 'Draw') {\n        this.onChangeShape(this.state.tools.Draw.options[0]);\n      }\n    }\n  }\n\n  /**\n   * Handle a change draw shape event.\n   * @param shape The new shape name.\n   */\n  onChangeShape = (shape: string) => {\n    if (this.state.dwvApp) {\n      this.state.dwvApp.setDrawShape(shape);\n    }\n  }\n\n  /**\n   * Handle a reset event.\n   */\n  onReset = tool => {\n    if (this.state.dwvApp) {\n      this.state.dwvApp.resetDisplay();\n    }\n  }\n\n  /**\n   * Open the DICOM tags dialog.\n   */\n  handleTagsDialogOpen = () => {\n    this.setState({ showDicomTags: true });\n  }\n\n  /**\n   * Close the DICOM tags dialog.\n   */\n  handleTagsDialogClose = () => {\n    this.setState({ showDicomTags: false });\n  };\n\n  /**\n   * Menu button click.\n   */\n  handleMenuButtonClick = event => {\n    this.setState({ toolMenuAnchorEl: event.currentTarget });\n  };\n\n  /**\n   * Menu cloase.\n   */\n  handleMenuClose = event => {\n    this.setState({ toolMenuAnchorEl: null });\n  };\n\n  /**\n   * Menu item click.\n   */\n  handleMenuItemClick = tool => {\n    this.setState({ toolMenuAnchorEl: null });\n    this.onChangeTool(tool);\n  };\n\n  // drag and drop [begin] -----------------------------------------------------\n\n  /**\n   * Setup the data load drop box: add event listeners and set initial size.\n   */\n  setupDropbox = (app) => {\n      // start listening to drag events on the layer container\n      const layerContainer = app.getElement('layerContainer');\n      if (layerContainer) {\n        // show drop box\n        this.showDropbox(app, true);\n        // start listening to drag events on the layer container\n        layerContainer.addEventListener('dragover', this.onDragOver);\n        layerContainer.addEventListener('dragleave', this.onDragLeave);\n        layerContainer.addEventListener('drop', this.onDrop);\n      }\n  }\n\n  /**\n   * Handle a drag over.\n   * @param event The event to handle.\n   */\n  onDragOver = (event: DragEvent) => {\n    // prevent default handling\n    event.stopPropagation();\n    event.preventDefault();\n    // update box border\n    const box = this.state.dwvApp.getElement(this.state.borderClassName);\n    if (box && box.className.indexOf(this.state.hoverClassName) === -1) {\n        box.className += ' ' + this.state.hoverClassName;\n    }\n  }\n\n  /**\n   * Handle a drag leave.\n   * @param event The event to handle.\n   */\n  onDragLeave = (event: DragEvent) => {\n    // prevent default handling\n    event.stopPropagation();\n    event.preventDefault();\n    // update box class\n    const box = this.state.dwvApp.getElement(this.borderClassName + ' hover');\n    if (box && box.className.indexOf(this.state.hoverClassName) !== -1) {\n        box.className = box.className.replace(' ' + this.state.hoverClassName, '');\n    }\n  }\n\n  /**\n   * Show/hide the data load drop box.\n   * @param show True to show the drop box.\n   */\n  showDropbox = (app, show) => {\n    const box = app.getElement(this.state.dropboxClassName);\n    if (box) {\n      if (show) {\n        // reset css class\n        box.className = this.state.dropboxClassName + ' ' + this.state.borderClassName;\n        // check content\n        if (box.innerHTML === '') {\n          box.innerHTML = 'Drag and drop data here.';\n        }\n        const size = app.getLayerContainerSize();\n        // set the initial drop box size\n        const dropBoxSize = 2 * size.height / 3;\n        box.setAttribute(\n          'style',\n          'width:' + dropBoxSize + 'px;height:' + dropBoxSize + 'px');\n      } else {\n        // remove border css class\n        box.className = this.state.dropboxClassName;\n        // remove content\n        box.innerHTML = '';\n        // make not visible\n        box.setAttribute(\n          'style',\n          'visible:false;');\n      }\n    }\n  }\n\n  /**\n   * Handle a drop event.\n   * @param event The event to handle.\n   */\n  onDrop = (event: DragEvent) => {\n    // prevent default handling\n    event.stopPropagation();\n    event.preventDefault();\n    // load files\n    this.state.dwvApp.loadFiles(event.dataTransfer.files);\n  }\n\n  // drag and drop [end] -------------------------------------------------------\n\n} // DwvComponent\n\nDwvComponent.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(DwvComponent);\n","import React, { Component } from 'react';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport indigo from '@material-ui/core/colors/indigo';\nimport pink from '@material-ui/core/colors/pink';\n\nimport './App.css';\nimport DwvComponent from './DwvComponent';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: indigo,\n    secondary: pink,\n    type: 'light'\n  }\n});\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={theme}>\n        <CssBaseline />\n        <div className=\"App\">\n          <DwvComponent />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}